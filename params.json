{"name":"SocketUtilities","tagline":"An attempt to make an interface to stream Berkeley sockets that is IP version agnostic and isn't terrible.","body":"### SocketUtilities\r\nThis project aims to provide an object based interface to the traditional socket I/O system calls in such a way that is manageable and clean. \r\n\r\n### Sample server using this library\r\n```\r\n#include <iostream>\r\n#include <fstream>\r\n#include <array>\r\n#include <stdexcept>\r\n#include <sstream>\r\n#include \"SocketUtilities.hpp\"\r\nusing namespace std;\r\n\r\nconst string response =\r\n\"HTTP/1.1 200 OK\\n\\n\"\r\n\"Hello, World!\\n\";\r\n\r\nint main(int argc, char** argv) {\r\n\r\n    // Error check command line arguments\r\n    if (argc != 2) {\r\n        cerr << \"Usage: \" << argv[0] << \" <port_number>\" << endl;\r\n        exit(1);\r\n    }\r\n\r\n    // create socket on which the server will listen\r\n    using SocketRAII = SocketUtilities::SocketRAII;\r\n    SocketRAII sockfd = SocketUtilities::create_server_socket(argv[1]);\r\n\r\n    // Print serving prompt\r\n    cout << \" * Serving on port \" << argv[1] << \" (Press CTRL+C to quit)\" << endl;\r\n\r\n    array<char, 1024> buffer;\r\n    while (true) {  // main accept() loop\r\n\r\n        // block and accept connection\r\n        SocketRAII new_fd = SocketUtilities::accept(sockfd,\r\n                                                    (sockaddr *) nullptr,\r\n                                                    (socklen_t*) nullptr);\r\n\r\n        // receive data\r\n        SocketUtilities::recv(new_fd, buffer.data(), buffer.size());\r\n\r\n        // send data\r\n        std::vector<char> data_to_send(response.begin(), response.end());\r\n        SocketUtilities::send_all(new_fd, data_to_send);\r\n    }\r\n\r\n    return 0;\r\n}\r\n```  \r\n\r\nTo compile and run it yourself type in  \r\n`make sampleserver && ./sampleserver 8000`  \r\nUse curl as a client to this  \r\n`curl --request GET \"http://localhost:8000\"`  \r\n\r\n### License \r\nCopyright (c) 2015 Aaryaman Sagar\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}